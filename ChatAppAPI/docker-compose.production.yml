# Docker Compose Production Configuration
# This file is designed for end-users to run the ChatApp from Docker Hub images
#
# Usage:
#   1. Create a .env file with your configuration (see .env.example)
#   2. Run: docker-compose -f docker-compose.production.yml up -d
#   3. Access the app at http://localhost:5000

name: chatapp-production

services:
  # SQL Server Database
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: chatapp-sqlserver
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=${DB_PASSWORD}
      - MSSQL_PID=Express
      - MSSQL_TCP_PORT=1433
    ports:
      - "${DB_EXTERNAL_PORT:-15000}:1433"
    volumes:
      - chatapp_sqlserver_data:/var/opt/mssql
    networks:
      - chatapp-network
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "/opt/mssql-tools18/bin/sqlcmd -S localhost -U sa -P ${DB_PASSWORD} -C -Q 'SELECT 1' || exit 1",
        ]
      interval: 10s
      retries: 10
      start_period: 30s
      timeout: 5s
    restart: unless-stopped

  # Backend API
  chatapi:
    image: ${DOCKER_USERNAME}/chatapi:${IMAGE_TAG:-latest}
    container_name: chatapp-api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__DefaultConnection=Server=${DB_SERVER:-sqlserver},${DB_PORT:-1433};Database=${DB_NAME};User Id=${DB_USER};Password=${DB_PASSWORD};TrustServerCertificate=True;
      - jwtSettings__Secret=${JWT_SECRET}
      - jwtSettings__Issuer=${JWT_ISSUER}
      - jwtSettings__Audience=${JWT_AUDIENCE}
    ports:
      - "${API_EXTERNAL_PORT:-44000}:8080"
    depends_on:
      sqlserver:
        condition: service_healthy
    networks:
      - chatapp-network
    restart: unless-stopped

  # Frontend UI
  chatappui:
    image: ${DOCKER_USERNAME}/chatappui:${IMAGE_TAG:-latest}
    container_name: chatapp-ui
    ports:
      - "${UI_EXTERNAL_PORT:-5000}:80"
    depends_on:
      - chatapi
    networks:
      - chatapp-network
    restart: unless-stopped

networks:
  chatapp-network:
    driver: bridge

volumes:
  chatapp_sqlserver_data:
    name: chatapp_sqlserver_data
    driver: local
